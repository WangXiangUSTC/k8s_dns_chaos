syntax = "proto3";

package pb;

service DNS {
  rpc SetDNSChaos(SetDNSChaosRequest) returns (DNSChaosResponse) {}
  rpc CancelDNSChaos(CancelDNSChaosRequest) returns (DNSChaosResponse) {}
}

message SetDNSChaosRequest {
  string name = 1;
  repeated Pod pods = 2;
  
  // mode means the chaos mode, values can be "RANDOM" or "ERROR"
  //   "RANDOM": return random IP
  //   "ERROR":  return unknown host error
  string mode = 3;

  // scope means the chaos scope, values can be "INNER", "OUTER" or "ALL":
  //   "INNER": chaos only works on the inner host in Kubernetes cluster
  //   "OUTER": chaos only works on the outer host of Kubernetes cluster
  //   "ALL":   chaos works on all host
  string scope = 4;
  string selector = 5;
}

message Pod {
  string namespace = 1;
  string name = 2;
}

message CancelDNSChaosRequest {
  string name = 1;
}

message DNSChaosResponse {
  bool result = 1;
  string msg = 2;
}